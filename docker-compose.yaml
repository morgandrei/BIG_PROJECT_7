version: '3'
services:
  redis:
    image: redis:7.2.2-alpine
    expose:
      - 6379
    volumes:
        - redis_data:/data
  db:
    image: postgres:14.7-alpine
    env_file:
      - .env

    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    env_file:
      - .env
    tty: true
    command: bash -c "python manage.py makemigrations users && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8080:8000"
    depends_on:
      db:
        condition: service_healthy

  celery:
    build: .
    tty: true
    command: bash -c "celery -A config worker --beat --loglevel=info"
    volumes:
      - .:/app  # директория из Dockerfile, где находится наш проект
    links:
      - redis
    depends_on:
      - redis
      - app

  celery_beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - redis
      - app

volumes:
  postgres_data:
  redis_data: